<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:mm="clr-namespace:ICSharpCode.ILSpy"
                    xmlns:dntheme="clr-namespace:dnSpy.Themes"
                    xmlns:shtv="clr-namespace:ICSharpCode.TreeView;assembly=ICSharpCode.TreeView"
                    xmlns:ctrls="clr-namespace:dnSpy.Shared.UI.Controls;assembly=dnSpy.Shared.UI"
                    xmlns:options="clr-namespace:dnSpy.Options"
                    xmlns:options2="clr-namespace:ICSharpCode.ILSpy.Options"
                    xmlns:hex="clr-namespace:dnSpy.Hex"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<dntheme:FileTabBackgroundConverter x:Key="FileTabBackgroundConverter"/>

	<Style x:Key="TabStateTabControl"
		   BasedOn="{StaticResource {x:Type TabControl}}"
           TargetType="{x:Type TabControl}">
        <Setter Property="Foreground"
                Value="{DynamicResource SystemColorsControlText}"/>
        <Setter Property="Padding"
                Value="0 2 0 0"/>
        <Setter Property="BorderThickness"
                Value="0 0 0 0"/>
        <Setter Property="Background"
                Value="{Binding TabManagerState, Converter={StaticResource FileTabBackgroundConverter}}"/>
        <Setter Property="Visibility"
                Value="{Binding HasOpenedDoc, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true"
                          ClipToBounds="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1"
                                           Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Panel.ZIndex ="1" 
                                  KeyboardNavigation.TabIndex="1"
                                  Grid.Column="0"
                                  Grid.Row="0"
                                  Margin="0 0 0 0"
                                  IsItemsHost="true"/>
                        <Border x:Name="ContentPanel"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                Grid.Column="0"
                                Grid.Row="1">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
	</Style>

    <Style x:Key="TabStateTabItemStyle"
           TargetType="{x:Type TabItem}">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Border ToolTip="{Binding ToolTip}">
						<Border>
							<Border Name="Border"
									Background="{DynamicResource EnvironmentFileTabBackground}"
									BorderBrush="{DynamicResource EnvironmentFileTabBorder}"
									BorderThickness="0 2 0 0"
									Padding="0 1 0 3">
								<DockPanel Name="DockPanel" TextBlock.Foreground="{DynamicResource EnvironmentFileTabText}">
									<ctrls:TabButton x:Name="CloseButton"
													 DockPanel.Dock="Right"
													 Margin="3 0 3 0"
													 Command="{Binding CloseCommand}"
													 GlyphForeground="Transparent"
													 HoverBackground="{DynamicResource EnvironmentFileTabButtonHoverInactive}"
													 HoverBorderBrush="{DynamicResource EnvironmentFileTabButtonHoverInactiveBorder}"
													 HoverForeground="{DynamicResource EnvironmentFileTabButtonHoverInactiveGlyph}"
													 HoverBorderThickness="1"
													 PressedBackground="{DynamicResource EnvironmentFileTabButtonDownInactive}"
													 PressedBorderBrush="{DynamicResource EnvironmentFileTabButtonDownInactiveBorder}"
													 PressedForeground="{DynamicResource EnvironmentFileTabButtonDownInactiveGlyph}"
													 PressedBorderThickness="1"
													 ToolTip="Close">
										<Path x:Name="CloseButtonCross"
											  Width="10" Height="8"
											  Stretch="Uniform"
											  Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
											  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" />
									</ctrls:TabButton>
									<ContentPresenter HorizontalAlignment="Stretch"
													  Margin="4 0 4 0"
													  VerticalAlignment="Stretch"
													  RecognizesAccessKey="True"
													  ContentSource="Header">
										<ContentPresenter.ContentTemplate>
											<DataTemplate>
												<TextBlock Text="{Binding Header}" MaxWidth="230" TextTrimming="CharacterEllipsis" ToolTip="{Binding ToolTip}" />
											</DataTemplate>
										</ContentPresenter.ContentTemplate>
									</ContentPresenter>
								</DockPanel>
							</Border>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<DataTrigger Value="True" Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource EnvironmentFileTabHotGradient}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource EnvironmentFileTabHotBorder}" />
							<Setter TargetName="DockPanel" Property="TextBlock.Foreground" Value="{DynamicResource EnvironmentFileTabHotText}" />
							<Setter TargetName="CloseButton" Property="GlyphForeground" Value="{DynamicResource EnvironmentFileTabHotGlyph}" />
						</DataTrigger>
						<DataTrigger Value="True" Binding="{Binding IsSelected}">
							<Setter Property="UIElement.Focusable" Value="False" />
							<Setter Property="Panel.ZIndex" Value="1" />
						</DataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=IsSelected}" Value="True" />
								<Condition Binding="{Binding Path=IsActive}" Value="True" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource EnvironmentFileTabSelectedGradient}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource EnvironmentFileTabSelectedBorder}" />
							<Setter TargetName="DockPanel" Property="TextBlock.Foreground" Value="{DynamicResource EnvironmentFileTabSelectedText}" />
							<Setter TargetName="CloseButton" Property="HoverBackground" Value="{DynamicResource EnvironmentFileTabButtonHoverSelectedActive}" />
							<Setter TargetName="CloseButton" Property="HoverBorderBrush" Value="{DynamicResource EnvironmentFileTabButtonHoverSelectedActiveBorder}" />
							<Setter TargetName="CloseButton" Property="HoverForeground" Value="{DynamicResource EnvironmentFileTabButtonHoverSelectedActiveGlyph}" />
							<Setter TargetName="CloseButton" Property="PressedBackground" Value="{DynamicResource EnvironmentFileTabButtonDownSelectedActive}" />
							<Setter TargetName="CloseButton" Property="PressedBorderBrush" Value="{DynamicResource EnvironmentFileTabButtonDownSelectedActiveBorder}" />
							<Setter TargetName="CloseButton" Property="PressedForeground" Value="{DynamicResource EnvironmentFileTabButtonDownSelectedActiveGlyph}" />
							<Setter TargetName="CloseButton" Property="GlyphForeground" Value="{DynamicResource EnvironmentFileTabButtonSelectedActiveGlyph}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=IsSelected}" Value="True" />
								<Condition Binding="{Binding Path=IsActive}" Value="False" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource EnvironmentFileTabInactiveGradient}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource EnvironmentFileTabInactiveBorder}" />
							<Setter TargetName="DockPanel" Property="TextBlock.Foreground" Value="{DynamicResource EnvironmentFileTabInactiveText}" />
							<Setter TargetName="CloseButton" Property="HoverBackground" Value="{DynamicResource EnvironmentFileTabButtonHoverSelectedInactive}" />
							<Setter TargetName="CloseButton" Property="HoverBorderBrush" Value="{DynamicResource EnvironmentFileTabButtonHoverSelectedInactiveBorder}" />
							<Setter TargetName="CloseButton" Property="HoverForeground" Value="{DynamicResource EnvironmentFileTabButtonHoverSelectedInactiveGlyph}" />
							<Setter TargetName="CloseButton" Property="PressedBackground" Value="{DynamicResource EnvironmentFileTabButtonDownSelectedInactive}" />
							<Setter TargetName="CloseButton" Property="PressedBorderBrush" Value="{DynamicResource EnvironmentFileTabButtonDownSelectedInactiveBorder}" />
							<Setter TargetName="CloseButton" Property="PressedForeground" Value="{DynamicResource EnvironmentFileTabButtonDownSelectedInactiveGlyph}" />
							<Setter TargetName="CloseButton" Property="GlyphForeground" Value="{DynamicResource EnvironmentFileTabButtonSelectedInactiveGlyph}" />
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type mm:AnalyzerTreeView}"
		   BasedOn="{StaticResource {x:Type shtv:SharpTreeView}}"
		   TargetType="{x:Type mm:AnalyzerTreeView}">
	</Style>
	<DataTemplate DataType="{x:Type mm:SearchResult}">
		<!-- Use Transparent background so tooltip is shown when hovering anywhere in the ListBoxItem -->
		<Grid ToolTip="{Binding ToolTip}" Background="Transparent">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="20" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Image Height="16" Width="16" HorizontalAlignment="Left" Source="{Binding Image}" />
			<ContentPresenter Grid.Column="1" Content="{Binding NameUI}" />
			<StackPanel Grid.Column="2" HorizontalAlignment="Right" Orientation="Horizontal" Margin="0,0,2,0">
				<Image Height="16" Margin="4,0,4,0" Width="16" Source="{Binding LocationImage}" />
				<ContentPresenter Content="{Binding LocationUI}" />
			</StackPanel>
		</Grid>
	</DataTemplate>

    <DataTemplate DataType="{x:Type options:OtherSettings}">
        <Grid Margin="10">
            <StackPanel>
                <CheckBox Margin="0 5 0 0" IsChecked="{Binding UseMemoryMappedIO}" Content="Use memory mapped I/O" ToolTip="Memory mapped I/O uses less memory and loads assemblies faster.&#x0A;Can be disabled per file if you right-click the module." />
                <CheckBox Margin="0 5 0 0" IsChecked="{Binding WindowsExplorerIntegration}" Content="Windows Explorer Integration" ToolTip="Add a context menu entry to Windows Explorer to open assemblies in dnSpy" />
                <CheckBox Margin="0 5 0 0" IsChecked="{Binding DeserializeResources}" Content="Deserialize types in resources (unsafe)" ToolTip="Any assembly could get loaded and executed with data from the resources." />
                <Button Margin="0 5 0 0" Content="Enable all warning messages" Command="{Binding EnableAllWarningsCommand}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type options2:DecompilerSettingsPanel}">
        <StackPanel Margin="10">
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.AnonymousMethods}">Decompile anonymous methods/lambdas</CheckBox>
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.YieldReturn}">Decompile enumerators (yield return)</CheckBox>
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.AsyncAwait}">Decompile async methods (async/await)</CheckBox>
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.QueryExpressions}" IsEnabled="{Binding Settings.AnonymousMethods}">Decompile query expressions</CheckBox>
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.ExpressionTrees}">Decompile expression trees</CheckBox>
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.UseDebugSymbols}">Use variable names from debug symbols, if available</CheckBox>
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.ShowXmlDocumentation}">Show XML documentation in decompiled code</CheckBox>
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.RemoveEmptyDefaultConstructors}">Remove empty default constructors</CheckBox>
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.ShowTokenAndRvaComments}">Show tokens, RVAs and file offsets</CheckBox>
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.ShowILBytes}">Show IL instruction bytes</CheckBox>
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.ShowILComments}">Show IL opcode comments</CheckBox>
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.SortMembers}">Sort methods, fields, properties, events and types</CheckBox>
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.ForceShowAllMembers}">Show hidden compiler generated types and methods</CheckBox>
            <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.SortSystemUsingStatementsFirst}">Place 'System' directives first when sorting usings</CheckBox>
            <GroupBox Margin="0 5 0 0" Header="Decompilation order">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox Grid.Column="0" HorizontalAlignment="Stretch" ItemsSource="{Binding Settings.DecompilationObjectsArray}" SelectedItem="{Binding Settings.DecompilationObject0}" />
                    <ComboBox Grid.Column="1" HorizontalAlignment="Stretch" ItemsSource="{Binding Settings.DecompilationObjectsArray}" SelectedItem="{Binding Settings.DecompilationObject1}" />
                    <ComboBox Grid.Column="2" HorizontalAlignment="Stretch" ItemsSource="{Binding Settings.DecompilationObjectsArray}" SelectedItem="{Binding Settings.DecompilationObject2}" />
                    <ComboBox Grid.Column="3" HorizontalAlignment="Stretch" ItemsSource="{Binding Settings.DecompilationObjectsArray}" SelectedItem="{Binding Settings.DecompilationObject3}" />
                    <ComboBox Grid.Column="4" HorizontalAlignment="Stretch" ItemsSource="{Binding Settings.DecompilationObjectsArray}" SelectedItem="{Binding Settings.DecompilationObject4}" />
                </Grid>
            </GroupBox>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type options2:DisplaySettingsPanel}">
        <Grid>
            <Grid.Resources>
                <options2:FontSizeConverter x:Key="fontSizeConv" />
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <GroupBox Header="Font">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>
                    <ComboBox Grid.Column="0" Margin="3,0" x:Name="fontSelector" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" SelectedItem="{Binding Settings.SelectedFont}" ItemsSource="{Binding Fonts}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Source}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox Grid.Column="1" Text="{Binding Settings.SelectedFontSize, Converter={StaticResource fontSizeConv}}" IsEditable="True" Margin="3,0">
                        <ComboBoxItem>6</ComboBoxItem>
                        <ComboBoxItem>7</ComboBoxItem>
                        <ComboBoxItem>8</ComboBoxItem>
                        <ComboBoxItem>9</ComboBoxItem>
                        <ComboBoxItem>10</ComboBoxItem>
                        <ComboBoxItem>11</ComboBoxItem>
                        <ComboBoxItem>12</ComboBoxItem>
                        <ComboBoxItem>13</ComboBoxItem>
                        <ComboBoxItem>14</ComboBoxItem>
                        <ComboBoxItem>15</ComboBoxItem>
                        <ComboBoxItem>16</ComboBoxItem>
                        <ComboBoxItem>17</ComboBoxItem>
                        <ComboBoxItem>18</ComboBoxItem>
                        <ComboBoxItem>19</ComboBoxItem>
                        <ComboBoxItem>20</ComboBoxItem>
                        <ComboBoxItem>21</ComboBoxItem>
                        <ComboBoxItem>22</ComboBoxItem>
                        <ComboBoxItem>23</ComboBoxItem>
                        <ComboBoxItem>24</ComboBoxItem>
                    </ComboBox>
                    <Border Grid.Row="1" Grid.ColumnSpan="4" BorderBrush="{DynamicResource SystemColorsControlDarkDark}" BorderThickness="1" Background="{DynamicResource SystemColorsWindow}" Margin="3,5">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="AaBbCcIiOoXxYyZz" FontFamily="{Binding Settings.SelectedFont}" FontSize="{Binding Settings.SelectedFontSize}" />
                    </Border>
                </Grid>
            </GroupBox>
            <GroupBox Header="Other Options" Grid.Row="1">
                <StackPanel Margin="3">
                    <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.ShowLineNumbers}">Show line numbers</CheckBox>
                    <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.ShowMetadataTokens}">Show metadata tokens</CheckBox>
                    <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.ShowAssemblyVersion}">Show assembly version</CheckBox>
                    <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.ShowAssemblyPublicKeyToken}">Show assembly public key token</CheckBox>
                    <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.DecompileFullType}">Decompile the full type instead of a single field / method / etc</CheckBox>
                    <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.NewEmptyTabs}">New tabs are empty</CheckBox>
                    <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.RestoreTabsAtStartup}">Restore tabs at startup</CheckBox>
                    <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.AutoHighlightRefs}">Highlight references</CheckBox>
                    <CheckBox Margin="0 5 0 0" IsChecked="{Binding Settings.SingleClickExpandsChildren}">Single click expands TreeView nodes</CheckBox>
                    <Grid Margin="0 5 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Content="Syntax highlight:" />
                        <CheckBox Grid.Column="1" Margin="0 0 0 0" IsChecked="{Binding Settings.SyntaxHighlightTreeViewUI}">TreeView</CheckBox>
                        <CheckBox Grid.Column="2" Margin="5 0 0 0" IsChecked="{Binding Settings.SyntaxHighlightAnalyzerTreeViewUI}">Analyzer</CheckBox>
                        <CheckBox Grid.Column="3" Margin="5 0 0 0" IsChecked="{Binding Settings.SyntaxHighlightSearchListUI}">Search</CheckBox>
                    </Grid>
                </StackPanel>
            </GroupBox>
        </Grid>
    </DataTemplate>

</ResourceDictionary>